
plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied 
    // after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// ext.kotlin_version = "1.8.0"


def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def versionProperties = new Properties()
def versionPropertiesFile = rootProject.file("version.properties")
if (versionPropertiesFile.exists()) {
    versionPropertiesFile.withReader("UTF-8") { reader ->
        versionProperties.load(reader)
    }
}
def flutterVersionCode = versionProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = versionProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// required for key signing.
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
dependencies {
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
}


android {
    namespace = "dev.onepub.handyman"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }


     kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        applicationId "dev.onepub.handyman"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 30 // flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        /// proves substitution key/values for AndroidManifest.xml
        manifestPlaceholders = [
        // required by the oidc package
         appAuthRedirectScheme: 'dev.onepub.handyman',
         applicationName: 'dev.onepub.handyman']
    }

    signingConfigs {
        /// run tool/linux_setup.dart to create the keystore and
        /// add the key.properties file in the project root.
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        debug {
            keyAlias keystoreProperties['keyAlias.debug']
            keyPassword keystoreProperties['keyPassword.debug']
            storeFile file(keystoreProperties['storeFile.debug'])
            storePassword keystoreProperties['storePassword.debug']
        }
    }
    buildTypes {
        release {
            signingConfig = signingConfigs.release
        }
         debug {
            signingConfig = signingConfigs.debug
            applicationIdSuffix ".debug"
        }
    }

}

flutter {
    source = "../.."
}
